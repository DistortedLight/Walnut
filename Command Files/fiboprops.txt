# Values x, y, z are in non-decreasing order.
def Inc "?msd_fib (x<=y) & (y<=z)":

# $FactorEq(i, j, n): F[i .. i + n - 1] = F[j .. j + n - 1].
def FactorEq "?msd_fib Ak (k < n) => (F[i + k] = F[j + k])":

# $Occurs(i, j, m, n): F[j .. j + m - 1] is a factor of F[i .. i + n - 1].
def Occurs "?msd_fib (m <= n) & (Ek (k + m <= n) & $FactorEq(j, i + k, m))":

# The word starting at index i of length n has p as a period.
def ValidTriplet "?msd_fib $Inc(1, p, n) & Aj (j + p < n) => F[i+j] = F[i+j+p]":

# The word starting at index i of length n has lowest period p.
def PrimitiveTriplet "?msd_fib $ValidTriplet(i, n, p) & (Aq $ValidTriplet(i, n, q) => (q >= p))":

# test
eval test "?msd_fib $PrimitiveTriplet(0, 2, 3)":
